name: Docker Image CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  test:
      runs-on: ubuntu-latest

      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
          
      - name: Run static code analysis
        run: pipenv run flake8 .

      - name: Run formatting
        run: pipenv run black --check .
      
      - name: Run tests
        run: pipenv run python -m unittest discover
      
  build:
#    if: > 
#      (github.event_name == 'push' && github.ref == 'refs/heads/main') || 
#      (github.event_name == 'pull_request' && github.event.action == 'closed'
#      && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
        
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with: 
        context: .
        push: false
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/log680_oxygencs:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/log680_oxygencs:${{ github.run_id }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Push Docker image
      uses: docker/build-push-action@v2
      with: 
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/log680_oxygencs:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/log680_oxygencs:${{ github.run_id }}

  publish:
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install and configure kubectl
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > ./kubeconfig.yaml

    - name: Deploy to Kubernetes
      run: |
        sed -i 's/TAG/${{ github.run_id }}/g' kubernetes/oxygencs-deployment.yaml
        kubectl apply -f kubernetes/oxygencs-deployment.yaml --kubeconfig ./kubeconfig.yaml
        kubectl rollout status deployment/oxygencs --kubeconfig ./kubeconfig.yaml
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}